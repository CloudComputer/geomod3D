// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// vectorized_pdist
NumericMatrix vectorized_pdist(NumericMatrix Ar, NumericMatrix Br);
RcppExport SEXP _geomod3D_vectorized_pdist(SEXP ArSEXP, SEXP BrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Ar(ArSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Br(BrSEXP);
    rcpp_result_gen = Rcpp::wrap(vectorized_pdist(Ar, Br));
    return rcpp_result_gen;
END_RCPP
}
// covd1_gaussian
NumericMatrix covd1_gaussian(NumericMatrix u, NumericMatrix v, NumericMatrix dir1, NumericMatrix A);
RcppExport SEXP _geomod3D_covd1_gaussian(SEXP uSEXP, SEXP vSEXP, SEXP dir1SEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir1(dir1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(covd1_gaussian(u, v, dir1, A));
    return rcpp_result_gen;
END_RCPP
}
// covd2_gaussian
NumericMatrix covd2_gaussian(NumericMatrix u, NumericMatrix v, NumericMatrix dir1, NumericMatrix dir2, NumericMatrix A);
RcppExport SEXP _geomod3D_covd2_gaussian(SEXP uSEXP, SEXP vSEXP, SEXP dir1SEXP, SEXP dir2SEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir1(dir1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir2(dir2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(covd2_gaussian(u, v, dir1, dir2, A));
    return rcpp_result_gen;
END_RCPP
}
// covd1_cubic
NumericMatrix covd1_cubic(NumericMatrix u, NumericMatrix v, NumericMatrix dir1, NumericMatrix A);
RcppExport SEXP _geomod3D_covd1_cubic(SEXP uSEXP, SEXP vSEXP, SEXP dir1SEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir1(dir1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(covd1_cubic(u, v, dir1, A));
    return rcpp_result_gen;
END_RCPP
}
// covd2_cubic
NumericMatrix covd2_cubic(NumericMatrix u, NumericMatrix v, NumericMatrix dir1, NumericMatrix dir2, NumericMatrix A);
RcppExport SEXP _geomod3D_covd2_cubic(SEXP uSEXP, SEXP vSEXP, SEXP dir1SEXP, SEXP dir2SEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir1(dir1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir2(dir2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(covd2_cubic(u, v, dir1, dir2, A));
    return rcpp_result_gen;
END_RCPP
}
// covd1_matern1
NumericMatrix covd1_matern1(NumericMatrix u, NumericMatrix v, NumericMatrix dir1, NumericMatrix A);
RcppExport SEXP _geomod3D_covd1_matern1(SEXP uSEXP, SEXP vSEXP, SEXP dir1SEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir1(dir1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(covd1_matern1(u, v, dir1, A));
    return rcpp_result_gen;
END_RCPP
}
// covd2_matern1
NumericMatrix covd2_matern1(NumericMatrix u, NumericMatrix v, NumericMatrix dir1, NumericMatrix dir2, NumericMatrix A);
RcppExport SEXP _geomod3D_covd2_matern1(SEXP uSEXP, SEXP vSEXP, SEXP dir1SEXP, SEXP dir2SEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir1(dir1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir2(dir2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(covd2_matern1(u, v, dir1, dir2, A));
    return rcpp_result_gen;
END_RCPP
}
// covd1_matern2
NumericMatrix covd1_matern2(NumericMatrix u, NumericMatrix v, NumericMatrix dir1, NumericMatrix A);
RcppExport SEXP _geomod3D_covd1_matern2(SEXP uSEXP, SEXP vSEXP, SEXP dir1SEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir1(dir1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(covd1_matern2(u, v, dir1, A));
    return rcpp_result_gen;
END_RCPP
}
// covd2_matern2
NumericMatrix covd2_matern2(NumericMatrix u, NumericMatrix v, NumericMatrix dir1, NumericMatrix dir2, NumericMatrix A);
RcppExport SEXP _geomod3D_covd2_matern2(SEXP uSEXP, SEXP vSEXP, SEXP dir1SEXP, SEXP dir2SEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir1(dir1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir2(dir2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(covd2_matern2(u, v, dir1, dir2, A));
    return rcpp_result_gen;
END_RCPP
}
// covd1_cauchy
NumericMatrix covd1_cauchy(NumericMatrix u, NumericMatrix v, NumericMatrix dir1, NumericMatrix A, double p);
RcppExport SEXP _geomod3D_covd1_cauchy(SEXP uSEXP, SEXP vSEXP, SEXP dir1SEXP, SEXP ASEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir1(dir1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(covd1_cauchy(u, v, dir1, A, p));
    return rcpp_result_gen;
END_RCPP
}
// covd2_cauchy
NumericMatrix covd2_cauchy(NumericMatrix u, NumericMatrix v, NumericMatrix dir1, NumericMatrix dir2, NumericMatrix A, double p);
RcppExport SEXP _geomod3D_covd2_cauchy(SEXP uSEXP, SEXP vSEXP, SEXP dir1SEXP, SEXP dir2SEXP, SEXP ASEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type u(uSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir1(dir1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dir2(dir2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(covd2_cauchy(u, v, dir1, dir2, A, p));
    return rcpp_result_gen;
END_RCPP
}
// sparse_sim
NumericVector sparse_sim(IntegerVector path, double nugget, NumericVector w_, NumericMatrix Bi_, NumericMatrix KMi_, double maxvar, NumericMatrix K_, NumericVector d_, NumericVector yTR, NumericVector vTR, bool discount_noise, NumericVector Q_, bool smooth);
RcppExport SEXP _geomod3D_sparse_sim(SEXP pathSEXP, SEXP nuggetSEXP, SEXP w_SEXP, SEXP Bi_SEXP, SEXP KMi_SEXP, SEXP maxvarSEXP, SEXP K_SEXP, SEXP d_SEXP, SEXP yTRSEXP, SEXP vTRSEXP, SEXP discount_noiseSEXP, SEXP Q_SEXP, SEXP smoothSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type path(pathSEXP);
    Rcpp::traits::input_parameter< double >::type nugget(nuggetSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w_(w_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Bi_(Bi_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type KMi_(KMi_SEXP);
    Rcpp::traits::input_parameter< double >::type maxvar(maxvarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type K_(K_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d_(d_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yTR(yTRSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vTR(vTRSEXP);
    Rcpp::traits::input_parameter< bool >::type discount_noise(discount_noiseSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Q_(Q_SEXP);
    Rcpp::traits::input_parameter< bool >::type smooth(smoothSEXP);
    rcpp_result_gen = Rcpp::wrap(sparse_sim(path, nugget, w_, Bi_, KMi_, maxvar, K_, d_, yTR, vTR, discount_noise, Q_, smooth));
    return rcpp_result_gen;
END_RCPP
}
// SPGP_CV
List SPGP_CV(NumericVector w_, NumericMatrix Bi_, NumericVector y_, NumericMatrix K_, NumericVector d_, NumericVector yTR, NumericVector vTR);
RcppExport SEXP _geomod3D_SPGP_CV(SEXP w_SEXP, SEXP Bi_SEXP, SEXP y_SEXP, SEXP K_SEXP, SEXP d_SEXP, SEXP yTRSEXP, SEXP vTRSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type w_(w_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Bi_(Bi_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type K_(K_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d_(d_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yTR(yTRSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vTR(vTRSEXP);
    rcpp_result_gen = Rcpp::wrap(SPGP_CV(w_, Bi_, y_, K_, d_, yTR, vTR));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_geomod3D_vectorized_pdist", (DL_FUNC) &_geomod3D_vectorized_pdist, 2},
    {"_geomod3D_covd1_gaussian", (DL_FUNC) &_geomod3D_covd1_gaussian, 4},
    {"_geomod3D_covd2_gaussian", (DL_FUNC) &_geomod3D_covd2_gaussian, 5},
    {"_geomod3D_covd1_cubic", (DL_FUNC) &_geomod3D_covd1_cubic, 4},
    {"_geomod3D_covd2_cubic", (DL_FUNC) &_geomod3D_covd2_cubic, 5},
    {"_geomod3D_covd1_matern1", (DL_FUNC) &_geomod3D_covd1_matern1, 4},
    {"_geomod3D_covd2_matern1", (DL_FUNC) &_geomod3D_covd2_matern1, 5},
    {"_geomod3D_covd1_matern2", (DL_FUNC) &_geomod3D_covd1_matern2, 4},
    {"_geomod3D_covd2_matern2", (DL_FUNC) &_geomod3D_covd2_matern2, 5},
    {"_geomod3D_covd1_cauchy", (DL_FUNC) &_geomod3D_covd1_cauchy, 5},
    {"_geomod3D_covd2_cauchy", (DL_FUNC) &_geomod3D_covd2_cauchy, 6},
    {"_geomod3D_sparse_sim", (DL_FUNC) &_geomod3D_sparse_sim, 13},
    {"_geomod3D_SPGP_CV", (DL_FUNC) &_geomod3D_SPGP_CV, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_geomod3D(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
